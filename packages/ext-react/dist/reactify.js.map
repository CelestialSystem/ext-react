{"version":3,"sources":["../src/reactify.js"],"names":["l","ExtJSComponent","htmlComponent","settings","configure","ExtReactSettings","getTheHtmlClass","htmltype","htmlify2","target","htmlifiedClass","getTheClass","isRootContainer","xtype","extJSClass","Ext","ClassManager","getByAlias","Error","reactify2","toLowerCase","replace","reactifiedClass","reactify","undefined","$config","Configurator","console","warn","substr","className"],"mappings":"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","file":"reactify.js","sourcesContent":["import { l } from './index'\nimport { ExtJSComponent } from './ExtJSComponent';\nimport { htmlComponent } from './htmlComponent';\n\n// global ext-react settings\nexport var settings = {};\n/**\n * Store ext-react settings from launch\n * @param {Object} ExtReactSettings \n */\nexport function configure(ExtReactSettings) {\n  settings = ExtReactSettings;\n}\n\nfunction getTheHtmlClass(htmltype) {\n  // //clean up xtype stuff (have a method instead of a property) - ExtReactSettings does it correctly\n  // var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`);\n  // if (!extJSClass) throw new Error(`No Ext JS component with xtype \"${xtype}\" found.  Perhaps you're missing a package?`);\n  //what is target used for?? or, does it have 1 meaning here and another in ExtJSComponent.js?\n  return class extends htmlComponent {\n//     //static get source() {return 'ExtJS'}\n     get htmltype() {return htmltype}\n//     get extJSClass() {return extJSClass}\n//     get ExtReactSettings() { return settings }\n//     get type() {return type}\n//     get target() {return target} //original element passed from jsx\n//  //   constructor(props) { super(props) }\n  }\n}\n\nexport function htmlify2(target) {\n  var htmlifiedClass = getTheHtmlClass(target)\n  return htmlifiedClass\n}\n\nfunction getTheClass(isRootContainer, xtype, target) {\n  //clean up xtype stuff (have a method instead of a property) - ExtReactSettings does it correctly\n  var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`);\n  if (!extJSClass) throw new Error(`No Ext JS component with xtype \"${xtype}\" found.  Perhaps you're missing a package?`);\n  //what is target used for?? or, does it have 1 meaning here and another in ExtJSComponent.js?\n  return class extends ExtJSComponent {\n    //static get source() {return 'ExtJS'}\n    get isRootContainer() {return isRootContainer}\n    get extJSClass() {return extJSClass}\n    get ExtReactSettings() { return settings }\n    get xtype() {return xtype}\n    get target() {return target} //original element passed from jsx\n    //constructor(props) { super(props) }\n  }\n}\n\n//merge this into reactify\nexport function reactify2(target) {\n  const xtype = target.toLowerCase().replace(/_/g, '-')\n  l(`reactify.js: reactify2, target: ${target}, xtype: ${xtype}`)\n\n  //l(`reactify2 ${xtype}`)\n  var reactifiedClass = getTheClass(false, xtype, target)\n  return reactifiedClass\n}\n\n//var reactifyObj = {};\n\nexport function reactify(target) {\n  //console.log('reactify ' + target)\n  // console.log(reactifyObj)\n  // if( typeof reactifyObj.numRoots == 'undefined' ) {\n  //   reactifyObj.numRoots = 0;\n  // }\n  // if (reactifyObj.numRoots > 1) {\n  //   throw `${target} More than 1 root import defined (either ExtReact, RootContainer or RootPanel)`\n  // }\n\n  // if(target == 'D3_Tree') {\n  //   console.log(typeof(target))\n  //   console.log(target.xtype)\n  //   console.log(target.$config)\n  // }\n\n  if (typeof(target) === 'function') {\n    //check to make sure this is an Ext JS define\n    //this is a custom ExtJS class (like worldmap), it has to have an xtype to work\n    if (target.xtype == undefined) {\n      if (!(target.$config instanceof Ext.Configurator)) {\n      console.warn(`ExtReact: Custom Ext JS component defined with no xtype`,target.$config)\n      }\n    }\n    // else {\n    //   l('target is a function: ' + target.xtype)\n    // }\n    return target.xtype\n  }\n  else if (target === 'Div') {\n    return 'Container'\n  }\n  else if (target === 'ExtReact') {\n //   reactifyObj.numRoots++\n    l('target is: ExtReact, return reactifiedClass')\n    const xtype = 'container'\n    var reactifiedClass = getTheClass(true, xtype, target)\n    return reactifiedClass\n  }\n  else if (target.substr(0,4) === 'Root') {\n//    reactifyObj.numRoots++\n    l('target is: ' + target + ', return reactifiedClass')\n    var className = target.substr(4)\n    const xtype = className.toLowerCase().replace(/_/g, '-')\n    var reactifiedClass = getTheClass(true, xtype, target)\n    return reactifiedClass\n  }\n  else {\n    // msg 001 l('target is: ' + target)\n    //l('target is: ' + target)\n    return target\n  }\n}\n"]}