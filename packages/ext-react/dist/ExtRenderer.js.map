{"version":3,"sources":["../src/ExtRenderer.js"],"names":["ReactDOM","l","reactify2","htmlify2","React","ReactFiberReconciler","invariant","emptyObject","UPDATE_SIGNAL","CLASS_CACHE","Grid","Ext","ClassManager","getByAlias","Column","Button","Menu","ToolTip","CellBase","get","WidgetCell","Dialog","Field","FitLayout","TabPanel","RendererCell","ExtRenderer","createInstance","type","props","internalInstanceHandle","instance","xtype","toLowerCase","replace","extJSClass","undefined","htmlifiedClass","reactifiedClass","appendInitialChild","parentInstance","childInstance","trim","length","parentXtype","childXtype","rawcolumns","push","cmp","rawmenu","rawmenuitems","rawcell","initialConfig","raweditor","rawbuttons","rawwidget","rawtooltip","config","rel","name","rawConfigs","rawitems","finalizeInitialChildren","ExtJSComponent","columns","items","menu","buttons","cell","editor","widget","tooltip","renderer","isAssignableFrom","forEach","column","children","rawhtml","html","_cloneProps","create","cls","render","createElement","el","dom","createTextInstance","text","rootContainerInstance","getPublicInstance","prepareForCommit","prepareUpdate","domElement","oldProps","newProps","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","shouldSetTextContent","s","now","useSyncScheduling","supportsMutation","appendChildToContainer","target","parentCmp","childCmp","ExtReactRoot","console","log","error","add","removeChildFromContainer","child","remove","commitMount","commitUpdate","updatePayload","_applyProps","appendChild","doAdd","reactChildren","warn","insertBefore","beforeChild","insertInContainerBefore","injectBefore","removeChild","removeColumn","setMenu","getItems","getItemId","commitTextUpdate","textInstance","oldText","newText","wrapDOMElement","node","contentEl","Component","element","DOMLazyTree","insertTreeBefore","document","HTMLElement","$createdByExtReact","_extCmp","subClass","parentClass","prototype","childPropsChildren","addColumn","setTooltip","setPlugin","isClassic","addDockedItems","getHideHeaders","i","insert"],"mappings":"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","file":"ExtRenderer.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport { l } from './index'\nimport { reactify2, htmlify2 } from './reactify';\nimport React from 'react';\nimport ReactFiberReconciler from 'react-reconciler';\nimport invariant from 'fbjs/lib/invariant';\nimport emptyObject from 'fbjs/lib/emptyObject';\nconst UPDATE_SIGNAL = {};\nconst CLASS_CACHE = {\n  Grid: Ext.ClassManager.getByAlias('widget.grid'),\n  Column: Ext.ClassManager.getByAlias('widget.gridcolumn'),\n  Button: Ext.ClassManager.getByAlias('widget.button'),\n  Menu: Ext.ClassManager.getByAlias('widget.menu'),\n  ToolTip: Ext.ClassManager.getByAlias('widget.tooltip'),\n  CellBase: Ext.ClassManager.get('Ext.grid.cell.Base'),\n  WidgetCell: Ext.ClassManager.getByAlias('widget.widgetcell'),\n  Dialog: Ext.ClassManager.getByAlias('widget.dialog'),\n  Field: Ext.ClassManager.getByAlias('widget.field'),\n  FitLayout: Ext.ClassManager.getByAlias('layout.fit'),\n  TabPanel: Ext.ClassManager.getByAlias('widget.tabpanel'),\n  RendererCell: Ext.ClassManager.getByAlias('widget.renderercell'),\n  Field: Ext.ClassManager.getByAlias('widget.field')\n}\n\nconst ExtRenderer = ReactFiberReconciler({\n\n  createInstance(type, props, internalInstanceHandle) {\n    let instance = null;\n    const xtype = type.toLowerCase().replace(/_/g, '-')\n    var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`)\n    if (extJSClass == undefined) {\n      l(`ExtRenderer: createInstance, type: ${type}, extJSClass UNDEFINED (type, props, internalInstanceHandle)`,type, props, internalInstanceHandle)\n      //SK : HTML Rendering - STEP 1 : Create HTML Instance\n      var htmlifiedClass = htmlify2(type)\n      instance =  new htmlifiedClass(props);\n      return instance\n    }\n    else {\n      l(`ExtRenderer: createInstance, type: ${type}, (props, internalInstanceHandle)`, props, internalInstanceHandle)\n      var reactifiedClass = reactify2(type) // could send xtype\n      instance =  new reactifiedClass(props);\n      return instance;\n    }\n  },\n\n  appendInitialChild(parentInstance, childInstance) {\n    if (childInstance == null || (typeof childInstance === \"string\" && childInstance.trim().length === 0)) {return}\n    if (parentInstance != null && childInstance != null) {\n      //SK : Do not uncomment below console statement. It will cause error in case of div\n      //l(`ExtRenderer: appendInitialChild, parentxtype: ${parentInstance.rawConfigs.xtype}, childxtype: ${childInstance.cmp.xtype}, (parentInstance, childInstance)`,parentInstance, childInstance)\n      l(`ExtRenderer: appendInitialChild`)\n      var parentXtype = parentInstance.xtype\n      var childXtype = childInstance.xtype\n\n      if (childXtype == 'column'      ||\n          childXtype == 'treecolumn'  ||\n          childXtype == 'textcolumn'  ||\n          childXtype == 'checkcolumn' ||\n          childXtype == 'datecolumn'  ||\n          childXtype == 'numbercolumn' )\n      {\n        if(parentInstance.rawcolumns == undefined) { parentInstance.rawcolumns = [] }\n        parentInstance.rawcolumns.push(childInstance.cmp)\n      }\n      else if (parentXtype == 'button' && childXtype == 'menu') {\n        if(parentInstance.rawmenu == undefined) { parentInstance.rawmenu = {} }\n        parentInstance.rawmenu =childInstance.cmp\n      }\n      else if (parentXtype == 'menu' && childXtype == 'menuitem') {\n        if(parentInstance.rawmenuitems == undefined) { parentInstance.rawmenuitems = [] }\n        parentInstance.rawmenuitems.push(childInstance.cmp)\n      }\n      else if (parentXtype == 'column' && childXtype == 'renderercell') {\n        if(parentInstance.rawcell == undefined) \n        parentInstance.rawcell = childInstance.cmp.initialConfig\n      }\n      else if (parentXtype == 'column' && childXtype == 'widgetcell') {\n        if(parentInstance.rawcell == undefined) \n        parentInstance.rawcell = childInstance.cmp.initialConfig\n      }\n      else if (parentXtype == 'column' && childInstance.cmp instanceof CLASS_CACHE.Field ) {\n        if(parentInstance.raweditor == undefined) \n        parentInstance.raweditor = childInstance.cmp\n      } \n      else if (parentXtype == 'dialog' && childXtype == 'button') {\n        if(parentInstance.rawbuttons == undefined) { parentInstance.rawbuttons = [] }\n        parentInstance.rawbuttons.push(childInstance.cmp)\n      }\n      else if (parentXtype == 'widgetcell') {\n        if(parentInstance.rawwidget == undefined) \n        parentInstance.rawwidget = childInstance.cmp.initialConfig\n      }\n      else if (childXtype == 'tooltip') {\n        if(parentInstance.rawtooltip == undefined) \n        parentInstance.rawtooltip = childInstance.cmp\n      }\n      else if (childInstance.cmp.config && childInstance.cmp.config.rel) {\n        let name = childInstance.cmp.config['rel']\n        if(typeof name == 'string') {\n          parentInstance.rawConfigs[name] = childInstance.cmp\n        }\n      }\n      else {\n        if(parentInstance.rawitems == undefined) { parentInstance.rawitems = [] }\n        if(childXtype == 'cartesian') {\n          parentInstance.rawitems.push(childInstance.cmp.initialConfig)\n        } else {\n          parentInstance.rawitems.push(childInstance.cmp)\n        }\n      }\n    }\n\t},\n\n  finalizeInitialChildren(ExtJSComponent, type, props) {\n    l(`ExtRenderer: finalizeInitialChildren`)\n    //console.log(ExtJSComponent.extJSClass)\n    //console.log('setting collection configs and creating EXT component here')\n    const xtype = type.toLowerCase().replace(/_/g, '-')\n    if (ExtJSComponent.extJSClass != null) {\n      l(`ExtRenderer: finalizeInitialChildren, type: ${type}, xtype: ${xtype}, (ExtJSComponent, props)`, ExtJSComponent,props)\n      if(ExtJSComponent.rawcolumns != undefined) {\n        l(`new set columns config (parent xtype,child columns)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawcolumns)\n        ExtJSComponent.rawConfigs.columns = ExtJSComponent.rawcolumns\n      }\n      if(ExtJSComponent.rawitems != undefined) {\n        l(`new set items config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawitems)\n        ExtJSComponent.rawConfigs.items = ExtJSComponent.rawitems\n      }\n      if(ExtJSComponent.rawmenu != undefined) {\n        l(`new set menu config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenu)\n        ExtJSComponent.rawConfigs.menu = ExtJSComponent.rawmenu\n      }\n      if(ExtJSComponent.rawmenuitems != undefined) {\n        l(`new set menu items config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenuitems)\n        ExtJSComponent.rawConfigs.items = ExtJSComponent.rawmenuitems\n      }\n      if(ExtJSComponent.rawbuttons != undefined) {\n        l(`new set buttons items config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenuitems)\n        ExtJSComponent.rawConfigs.buttons = ExtJSComponent.rawbuttons\n      }\n      if(ExtJSComponent.rawcell != undefined) {\n        l(`new set cell config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenu)\n        ExtJSComponent.rawConfigs.cell = ExtJSComponent.rawcell\n      }\n      if(ExtJSComponent.raweditor != undefined) {\n        l(`new set editor config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenu)\n        ExtJSComponent.rawConfigs.editor = ExtJSComponent.raweditor\n      }\n      if(ExtJSComponent.rawwidget != undefined) {\n        l(`new set widget config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenu)\n        ExtJSComponent.rawConfigs.widget = ExtJSComponent.rawwidget\n      }\n      if(ExtJSComponent.rawtooltip != undefined) {\n        l(`new set widget config (parent xtype,child items)`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawmenu)\n        ExtJSComponent.rawConfigs.tooltip = ExtJSComponent.rawtooltip\n      }\n      if(ExtJSComponent.rawConfigs.renderer != undefined && CLASS_CACHE.Column && isAssignableFrom(ExtJSComponent.rawConfigs,CLASS_CACHE.Column)) {\n        l(`renderer`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawConfigs.renderer)\n        ExtJSComponent.rawConfigs.cell= ExtJSComponent.rawConfigs.cell || {}\n        ExtJSComponent.rawConfigs.cell.xtype = 'renderercell'\n      }\n      if(ExtJSComponent.rawConfigs.columns!= undefined && CLASS_CACHE.Column && isAssignableFrom(ExtJSComponent.rawConfigs,CLASS_CACHE.Column)) {\n        l(`renderer`,ExtJSComponent.rawConfigs.xtype,ExtJSComponent.rawConfigs.renderer)\n        ExtJSComponent.rawConfigs.columns.forEach(function(column){\n          if(column.renderer != undefined) {\n            column.cell= column.cell || {}\n            column.cell.xtype = 'renderercell'\n          }\n        })\n      }\n      if(ExtJSComponent.rawConfigs.config != undefined ) {\n        Object.assign(ExtJSComponent.rawConfigs, ExtJSComponent.rawConfigs.config);   \n      }\n      if (typeof(props.children) == 'string' || typeof(props.children) == 'number') {\n        if(ExtJSComponent.rawhtml === undefined) {\n          ExtJSComponent.rawConfigs.html = props.children\n        }\n      }\n      ExtJSComponent.rawConfigs = ExtJSComponent._cloneProps(ExtJSComponent.rawConfigs)\n      ExtJSComponent.cmp = new ExtJSComponent.extJSClass(ExtJSComponent.rawConfigs)\n      l(`ExtRenderer: finalizeInitialChildren, type: ${type}, xtype: ${xtype}, (ExtJSComponent.rawConfigs, ExtJSComponent.cmp)`, ExtJSComponent.rawConfigs, ExtJSComponent.cmp)\n    }\n    else {\n      //SK : HTML Rendering - STEP 2  : Create component and render HTML in its DOM\n      var cmp = Ext.create({xtype:'component', cls: 'x-react-element'})\n      ReactDOM.render(React.createElement(type, props, props.children),cmp.el.dom)\n      ExtJSComponent.cmp = cmp\n      l(`ExtRenderer: finalizeInitialChildren, type: ${type}, xtype: ${xtype}, ExtJSComponent == html`,ExtJSComponent)\n    }\n    return true;\n  },\n \n  createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    l(`createTextInstance (text, rootContainerInstance, internalInstanceHandle)`,text, rootContainerInstance, internalInstanceHandle)\n    return text\n  },\n \n  getPublicInstance(instance) {\n    l(`getPublicInstance`,instance)\n    return instance\n  },\n\n  prepareForCommit() {\n    l(`prepareForCommit**********`)\n  },\n\n  prepareUpdate(domElement, type, oldProps, newProps) {\n    l(`prepareUpdate ${type} **********`)\n    return UPDATE_SIGNAL\n  },\n\n  resetAfterCommit() {\n    l(`resetAfterCommit**********`)\n  },\n\n  resetTextContent(domElement) {\n    l(`resetTextContent**********`)\n   },\n\n  shouldDeprioritizeSubtree(type, props) {\n    l(`shouldDeprioritizeSubtree**********`)\n    return false\n  },\n\n  getRootHostContext() {\n    l(`getRootHostContext**********`)\n    return emptyObject\n  },\n\n  getChildHostContext() {\n    l(`getChildHostContext**********`)\n    return emptyObject\n  },\n\n  //scheduleDeferredCallback: ReactDOMFrameScheduling.rIC,\n\n  shouldSetTextContent(type, props) {\n    l(`shouldSetTextContent**********type,props`,type,props)\n    //SK : FOR HTML Nested Components we need to create instance for only parent so we set the text context\n    const xtype = type.toLowerCase().replace(/_/g, '-')\n    var extJSClass = Ext.ClassManager.getByAlias(`widget.${xtype}`)\n    var s = typeof props.children === 'string' || typeof props.children === 'number' || extJSClass === undefined\n    l(`shouldSetTextContent**********s`,s)\n    return (\n      typeof props.children === 'string' || typeof props.children === 'number' || extJSClass === undefined\n    );\n  },\n\n  //now: ReactDOMFrameScheduling.now,\n  now: () => {},\n\n  useSyncScheduling: true,\n\tsupportsMutation: true,\n\n  appendChildToContainer(parentInstance, childInstance) {\n    //should only be for ExtReact root component\n    if (parentInstance != null && childInstance != null) {\n      l('appendChildToContainer (childInstance.target, parentInstance, childInstance)', childInstance.target, parentInstance, childInstance)\n      //this section replaces all of doAdd!!!\n      var parentCmp = parentInstance\n      var childCmp = childInstance.cmp\n      if (parentCmp.ExtReactRoot != true) {\n        console.log('appendChildToContainer ERROR ExtReactRoot is the only one to be in do Add')\n        throw error\n      }\n      else {\n        l('appendChildToContainer This is ExtReactRoot, call add method on parent')\n        if(childCmp) {\n          parentCmp.add(childCmp)\n        } else {\n          l(\"appendChildToContainer This is ExtReactRoot but with string/non ExtJS child\")\n        }\n      }\n    }\n    else {\n      l('appendChildToContainer (null) parentInstance', parentInstance)\n      l('appendChildToContainer (null) childInstance', childInstance)\n    }\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    l(`removeChildFromContainer (parentInstance, child)`, parentInstance, child)\n    if (parentInstance != null && child != null) {\n      if(child.cmp) {\n        parentInstance.remove(child.cmp, true)\n      } else {\n        console.log(\"removeChildFromContainer - child.cmp is undefined\")\n      }        \n    }\n  },\n\n  commitMount(instance, type, newProps) {\n    l(`commitMount**********`)\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    l(`commitUpdate ${type} (instance, updatePayload, oldProps, newProps)`, instance, updatePayload, oldProps, newProps)\n    if (instance._applyProps) {\n      instance._applyProps(oldProps, newProps, instance, type);\n    }\n    else {\n      console.log('Error: _applyProps')\n      console.log(instance)\n    }\n  },\n\n  appendChild(parentInstance, childInstance) {\n    if(childInstance.cmp === undefined) {\n      l(\"plain text\")\n      return false;\n    }\n    if (parentInstance != null && childInstance != null) {\n      l('appendChild (childInstance.xtype, parentInstance, child)', childInstance.xtype, parentInstance, childInstance)\n      doAdd(childInstance.xtype, parentInstance.cmp, childInstance.cmp, childInstance.reactChildren)\n    }\n    else {\n      console.warn('both are null')\n    }\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    l(`insertBefore**********`)\n    invariant(\n      child !== beforeChild,\n      'ExtRenderer: Can not insert node before itself',\n    );\n    if(parentInstance.cmp.insertBefore && typeof parentInstance.cmp.insertBefore === 'function') {\n      parentInstance.cmp.insertBefore(child.cmp, beforeChild.cmp);\n    }\n  },\n\n  insertInContainerBefore(parentInstance, child, beforeChild) {\n    l(`insertInContainerBefore**********`)\n    invariant(\n      child !== beforeChild,\n      'ExtRenderer: Can not insert node before itself',\n    );\n    child.injectBefore(beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    if (parentInstance != null && child != null) {\n      l(`removeChild (parentInstance, child)`, parentInstance, child)\n      //not working commented out for tab panel close - does this cause anything to break??\n      if (parentInstance.xtype == 'html') return //correct??\n      if (child.cmp != undefined) {\n        if(parentInstance.cmp.xtype == 'grid' && child.cmp.xtype == 'column') {\n          parentInstance.cmp.removeColumn(child.cmp);\n        } \n        else if(parentInstance.cmp.xtype === \"button\") {\n          if(child.cmp.xtype === \"menu\"){\n            parentInstance.cmp.setMenu(null)\n          }\n        }\n        else if(parentInstance.cmp.getItems!= undefined && typeof parentInstance.cmp.getItems == 'function' && parentInstance.cmp.getItems().get(child.cmp.getItemId())) {\n          parentInstance.cmp.remove(child.cmp, true)\n        } else {\n          console.log(\"DID NOTHING IN REMOVE\")\n        }   \n      }\n    }\n    else {\n      console.warn('removeChild - both are null')\n    }\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    l(`commitTextUpdate**********`)\n  },\n\n})\n\nexport default ExtRenderer\n\n/**\n * Wraps a dom element in an Ext Component so it can be added as a child item to an Ext Container.  We attach\n * a reference to the generated Component to the dom element so it can be destroyed later if the dom element\n * is removed when rerendering\n * @param {Object} node A React node object with node, children, and text\n * @returns {Ext.Component}\n */\nfunction wrapDOMElement(node) {\n  let contentEl = node.node;\n\n  const cmp = new Ext.Component({ \n      // We give the wrapper component a class so that developers can reset css \n      // properties (ex. box-sizing: context-box) for third party components.\n      cls: 'x-react-element' \n  });\n  \n  if (cmp.element) {\n      // modern\n      DOMLazyTree.insertTreeBefore(cmp.element.dom, node);\n  } else {\n      // classic\n      const target = document.createElement('div');\n      DOMLazyTree.insertTreeBefore(target, node);\n      cmp.contentEl = contentEl instanceof HTMLElement ? contentEl : target /* text fragment or comment */;\n  }\n\n  cmp.$createdByExtReact = true;\n  contentEl._extCmp = cmp;\n\n  // this is needed for devtools when using dangerouslyReplaceNodeWithMarkup\n  // this not needed in fiber\n  cmp.node = contentEl;\n\n  return cmp;\n}\n\n/**\n * Returns true if subClass is parentClass or a sub class of parentClass\n * @param {Ext.Class} subClass\n * @param {Ext.Class} parentClass\n * @return {Boolean}\n */\nfunction isAssignableFrom(subClass, parentClass) {\n  if (!subClass || !parentClass) return false;\n  if (parentClass.xtype == 'gridcolumn' && subClass.xtype != undefined) {\n    subClass = Ext.ClassManager.getByAlias('widget.' + subClass.xtype)\n  }\n  return subClass === parentClass || subClass.prototype instanceof parentClass;\n}\n\n//this needs to be refactored\nfunction doAdd(childXtype, parentCmp, childCmp, childPropsChildren) {\n  l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, (parentCmp, childCmp, childPropsChildern)`, parentCmp, childCmp, childPropsChildren)\n//console.warn('why in doAdd??')\n\n  //  parentCmp.add(childCmp)\n//  return\n\n\n\n  // if (parentCmp.ExtReactRoot != true) {\n  //   console.log('ExtReactRoot is the only onc to be in doAdd')\n  //   throw error\n  // }\n  // else {\n  //   console.log('This is ExtReactRoot, do add')\n  //   parentCmp.add(childCmp)\n  // }\n\n  // return\n\n  //  l(`ExtRenderer: createInstance, type: ${type}, extJSClass undefined`)\n\n  //which other types need special care?\n\n  if(parentCmp.xtype == 'grid') {\n    if (childXtype == 'column' || \n    childXtype == 'treecolumn' || \n    childXtype == 'textcolumn' || \n    childXtype == 'checkcolumn' || \n    childXtype == 'datecolumn' || \n    childXtype == 'rownumberer' ||\n    childXtype == 'numbercolumn' ) {\n    parentCmp.addColumn(childCmp);\n    }\n  }\n  else if (parentCmp.xtype == 'tooltip') {\n    parentCmp.setTooltip(childCmp)\n  }\n  else if (parentCmp.xtype == 'plugin') {\n    parentCmp.setPlugin(childCmp)\n  }\n  else if (parentCmp.xtype == 'button') {\n    if (childXtype == 'menu') {\n//      l(`doAdd button/menu`)\n      l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, button/menu setMenu`)\n      parentCmp.setMenu(childCmp)\n    }\n    else {\n      l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, did nothing!!!`)\n    }\n  }\n\n  else if (childXtype == 'toolbar'  && Ext.isClassic == true) {\n    l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, toolbar, classic, addDockedItems`)\n    parentCmp.addDockedItems(childCmp)\n  }\n\n\n  else if ((childXtype == 'toolbar' || childXtype == 'titlebar') && parentCmp.getHideHeaders != undefined) {\n    if (parentCmp.getHideHeaders() == false) {\n//      l(`doAdd toolbar hideHeaders is false`)\n      l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, toolbar hideHeaders is false, insert`)\n      var i = parentCmp.items.items.length\n      parentCmp.insert(i-1,childCmp)\n     }\n    else {\n      //l(`doAdd toolbar hideHeaders is true`)\n      l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, toolbar hideHeaders is false, add`)\n      parentCmp.add(childCmp)\n    }\n  }\n  else if (parentCmp.add != undefined) {\n    //l(`doAdd use add method`, parentCmp.xtype, childCmp.xtype)\n    l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, add`)\n    parentCmp.add(childCmp)\n  }\n  else {\n    //l(`doAdd did nothing!!!`, parentCmp.xtype, childCmp.xtype)\n    l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, did nothing!!!`)\n\n  }\n\n \n//we return if we handle html children correctly\n//return\n\n\n\n\n//   if (childPropsChildren == undefined) return\n//   if (childPropsChildren.type == undefined) { \n//     if(typeof childPropsChildren === \"string\") {\n//       //PLAIN TEXT CASE\n//       var text=childPropsChildren\n//       //l(`${text} is PLAIN TEXT`)\n//       l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, ${text} is PLAIN TEXT`)\n//       childCmp.setHtml(text)\n//     } \n//     else {\n//       l(`ExtRenderer.js: doAdd, parentxtype: ${parentCmp.xtype}, childxtype: ${childXtype}, (children)`, childPropsChildren)\n//       for (var i = 0; i < childPropsChildren.length; i++) {\n//         var child = childPropsChildren[i]\n//         var xtype = null\n//         try {\n//           var type = child.type\n//           if (type == undefined) { \n//             type = child[0].type \n//           }\n//           xtype = type.toLowerCase().replace(/_/g, '-')\n//         }\n//         catch(e) {\n//           l(`ExtRenderer.js: doAdd, child ${i}, catch (child)`, child)\n//           continue\n//         }\n//         if (xtype != null) {\n//           var target = Ext.ClassManager.getByAlias(`widget.${xtype}`)\n//           if (target == undefined) {\n//             //l(`${xtype} is HTML`)\n//             l(`ExtRenderer.js: doAdd, child ${i}, xtype: ${xtype}, is HTML`)\n//             //should call wrapDOMElement(node)??? what does classic do? can widget be used?\n//             var widget = Ext.create({xtype:'widget'})\n//             childCmp.add(widget)\n//             ReactDOM.render(child,widget.el.dom)\n//           }\n//           else {\n// //            l(`xtype is NULL`)\n//             l(`ExtRenderer.js: doAdd, child ${i}, xtype: ${xtype}, target ${xtype}`)\n//           }\n//         }\n//         else {\n//           l(`ExtRenderer.js: doAdd, children, xtype: ${xtype}, i: ${i}, is null`)\n//           //l(`${xtype} is ExtJS`)\n//         }\n//       }\n//     }\n    \n//   }\n//   else {\n//     l(childPropsChildren);\n//     var child = childPropsChildren\n\n//     var xtype = null\n//     try {\n//       var type = child.type\n//       if (type == undefined) { \n//         type = child[0].type \n//       }\n//       xtype = type.toLowerCase().replace(/_/g, '-')\n//     }\n//     catch(e) {\n//     }\n\n//     if (xtype != null) {\n//       var extObject = Ext.ClassManager.getByAlias(`widget.${xtype}`)\n//       if (extObject == undefined) {\n//         l(`${xtype} is HTML`)\n//         //should call wrapDOMElement(node)??? what does classic do? can widget be used?\n\n//         var widget = Ext.create({xtype:'widget'})\n//         childCmp.add(widget)\n//         ReactDOM.render(child,widget.el.dom)\n//       }\n//       else {\n//         l(`xtype is NULL`)\n//       }\n//     }\n//     else {\n//       l(`${xtype} is ExtJS`)\n//     }\n\n//   }\n}\n"]}