{"version":3,"sources":["../src/renderWhenReady.js"],"names":["React","reactify","ExtReact","launchQueue","renderWhenReady","Component","console","log","state","ready","Ext","isReady","done","componentWillMount","push","render","props","isExtJSComponent","onReady","queued","setState"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA0B,SAA1B;AACA,IAAMC,WAAWD,SAAS,UAAT,CAAjB;AACA;;AAEA,IAAME,cAAc,EAApB;;AAEA;;;;;AAKA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAAA;;AAE/C;AAAA;;AAII,2CAAc;AAAA;;AAAA,yDACV,2BADU;;AAEVC,oBAAQC,GAAR,CAAY,aAAZ;;AAEA,kBAAKC,KAAL,GAAa;AACTC,uBAAOC,IAAIC,OADF;AAETC,sBAAM;AAFG,aAAb;AAJU;AAQb;;AAZL,0CAcIC,kBAdJ,iCAcyB;AACnBP,oBAAQC,GAAR,CAAY,oBAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACE,gBAAI,CAAC,KAAKD,KAAL,CAAWC,KAAhB,EAAuB;AACnBN,4BAAYW,IAAZ,CAAiB,IAAjB;AACH;AACJ,SApBL;;AAAA,0CAsBIC,MAtBJ,qBAsBa;AACPT,oBAAQC,GAAR,CAAY,QAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;;AAEA,gBAAI,KAAKD,KAAL,CAAWC,KAAX,KAAqB,IAArB,IAA6B,KAAKD,KAAL,CAAWI,IAAX,IAAmB,KAApD,EAA4D;AAC1DN,wBAAQC,GAAR,CAAY,IAAZ;AACA,qBAAKC,KAAL,CAAWI,IAAX,GAAkB,IAAlB;AACA,uBAAO,oBAAC,SAAD,EAAe,KAAKI,KAApB,CAAP;;AAEA;AACA;AACD,aAPD,MAQK;AACH,uBAAO,KAAP;AACD;;AAEC;AACA;AACA;AACH,SAzCL;;AAAA;AAAA,MAA6ChB,MAAMK,SAAnD,UAEWY,gBAFX,GAE8B,IAF9B;AA2CH;;AAEDP,IAAIQ,OAAJ,CAAY,YAAM;AACd,yBAAmBf,WAAnB,6GAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAvBgB,MAAuB;;AAC5BA,eAAOC,QAAP,CAAgB,EAAEX,OAAO,IAAT,EAAhB;AACH;AACJ,CAJD","file":"renderWhenReady.js","sourcesContent":["import React from 'react';\nimport { reactify } from  './index'\nconst ExtReact = reactify('ExtReact')\n//import { ExtReact } from '@sencha/ext-react'\n\nconst launchQueue = [];\n\n/**\n * Higher order function that returns a component that waits for a ExtReact to be ready before rendering.\n * @param {class} Component \n * @return {class}\n */\nexport default function renderWhenReady(Component) {\n\n    return class ExtReactRenderWhenReady extends React.Component {\n\n        static isExtJSComponent = true;\n\n        constructor() {\n            super();\n            console.log('constructor')\n\n            this.state = {\n                ready: Ext.isReady,\n                done: false\n            }\n        }\n\n        componentWillMount() {\n          console.log('componentWillMount')\n          console.log(this.state.ready)\n            if (!this.state.ready) {\n                launchQueue.push(this);\n            }\n        }\n\n        render() {\n          console.log('render')\n          console.log(this.state.ready)\n\n          if (this.state.ready === true && this.state.done == false ) {\n            console.log('in')\n            this.state.done = true\n            return <Component {...this.props}/>\n\n            //return <ExtReact><Component {...this.props}/></ExtReact>\n            //return <div>hi</div>\n          }\n          else {\n            return false\n          }\n\n            // return this.state.ready === true && (\n            //     <ExtReact><Component {...this.props}/></ExtReact>\n            // );\n        }\n    }\n}\n\nExt.onReady(() => {\n    for (let queued of launchQueue) {\n        queued.setState({ ready: true });\n    }    \n});"]}